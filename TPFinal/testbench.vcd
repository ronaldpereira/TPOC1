$date
	Mon Jul  4 20:26:26 2016
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 16 ! bus [15:0] $end
$var reg 1 " clock $end
$var reg 16 # iin [15:0] $end
$var reg 1 $ resetn $end
$scope module p $end
$var wire 16 % a [15:0] $end
$var wire 1 & a_enable $end
$var wire 16 ' bus [15:0] $end
$var wire 1 ( clear $end
$var wire 1 ) clock $end
$var wire 2 * cont [1:0] $end
$var wire 16 + iin [15:0] $end
$var wire 16 , imediate [15:0] $end
$var wire 1 - immediate_select $end
$var wire 1 . negativo $end
$var wire 1 / opSelect $end
$var wire 16 0 out [15:0] $end
$var wire 16 1 r [15:0] $end
$var wire 16 2 r0 [15:0] $end
$var wire 1 3 r0_enable $end
$var wire 1 4 r0_select $end
$var wire 16 5 r1 [15:0] $end
$var wire 1 6 r1_enable $end
$var wire 1 7 r1_select $end
$var wire 16 8 r2 [15:0] $end
$var wire 1 9 r2_enable $end
$var wire 1 : r2_select $end
$var wire 16 ; r3 [15:0] $end
$var wire 1 < r3_enable $end
$var wire 1 = r3_select $end
$var wire 16 > r4 [15:0] $end
$var wire 1 ? r4_enable $end
$var wire 1 @ r4_select $end
$var wire 16 A r5 [15:0] $end
$var wire 1 B r5_enable $end
$var wire 1 C r5_select $end
$var wire 16 D r6 [15:0] $end
$var wire 1 E r6_enable $end
$var wire 1 F r6_select $end
$var wire 16 G r7 [15:0] $end
$var wire 1 H r7_enable $end
$var wire 1 I r7_select $end
$var wire 1 J r_enable $end
$var wire 1 K r_select $end
$var wire 1 L resetn $end
$var wire 16 M saida [15:0] $end
$var reg 16 N OutputProcessor [15:0] $end
$var reg 9 O in [8:0] $end
$scope module comp $end
$var wire 1 . enable $end
$var wire 16 P in [15:0] $end
$var reg 16 Q out [15:0] $end
$upscope $end
$scope module ext $end
$var wire 16 R iin [15:0] $end
$var reg 10 S imediate [9:0] $end
$var reg 16 T out [15:0] $end
$upscope $end
$scope module contador $end
$var wire 1 ( clear $end
$var wire 1 ) clock $end
$var reg 2 U out [1:0] $end
$upscope $end
$scope module ctrl $end
$var wire 2 V count [1:0] $end
$var wire 9 W in [8:0] $end
$var wire 8 X outEnable [7:0] $end
$var wire 8 Y outRegistera [7:0] $end
$var wire 8 Z outRegisterb [7:0] $end
$var wire 1 L resetn $end
$var reg 1 [ a_enable $end
$var reg 1 \ clear $end
$var reg 1 ] immediate_select $end
$var reg 1 ^ negar $end
$var reg 1 _ negativo $end
$var reg 1 ` opSelect $end
$var reg 3 a operation [2:0] $end
$var reg 1 b r0_enable $end
$var reg 1 c r0_select $end
$var reg 1 d r1_enable $end
$var reg 1 e r1_select $end
$var reg 1 f r2_enable $end
$var reg 1 g r2_select $end
$var reg 1 h r3_enable $end
$var reg 1 i r3_select $end
$var reg 1 j r4_enable $end
$var reg 1 k r4_select $end
$var reg 1 l r5_enable $end
$var reg 1 m r5_select $end
$var reg 1 n r6_enable $end
$var reg 1 o r6_select $end
$var reg 1 p r7_enable $end
$var reg 1 q r7_select $end
$var reg 1 r r_enable $end
$var reg 1 s r_select $end
$var reg 3 t registera [2:0] $end
$var reg 3 u registerb [2:0] $end
$var reg 1 v saida $end
$var reg 2 w status [1:0] $end
$scope module d1 $end
$var wire 3 x register [2:0] $end
$var reg 8 y out [7:0] $end
$upscope $end
$scope module d2 $end
$var wire 3 z register [2:0] $end
$var reg 8 { out [7:0] $end
$upscope $end
$scope module d3 $end
$var wire 3 | register [2:0] $end
$var reg 8 } out [7:0] $end
$upscope $end
$upscope $end
$scope module mux $end
$var wire 16 ~ imediate [15:0] $end
$var wire 1 - imediate_select $end
$var wire 16 !" r [15:0] $end
$var wire 16 "" r0 [15:0] $end
$var wire 1 4 r0_select $end
$var wire 16 #" r1 [15:0] $end
$var wire 1 7 r1_select $end
$var wire 16 $" r2 [15:0] $end
$var wire 1 : r2_select $end
$var wire 16 %" r3 [15:0] $end
$var wire 1 = r3_select $end
$var wire 16 &" r4 [15:0] $end
$var wire 1 @ r4_select $end
$var wire 16 '" r5 [15:0] $end
$var wire 1 C r5_select $end
$var wire 16 (" r6 [15:0] $end
$var wire 1 F r6_select $end
$var wire 16 )" r7 [15:0] $end
$var wire 1 I r7_select $end
$var wire 1 K r_select $end
$var reg 16 *" bus [15:0] $end
$upscope $end
$scope module alu $end
$var wire 16 +" a [15:0] $end
$var wire 16 ," b [15:0] $end
$var wire 1 / opSelect $end
$var reg 16 -" out [15:0] $end
$upscope $end
$scope module Register0 $end
$var wire 1 ) clock $end
$var wire 1 3 enable $end
$var wire 16 ." in [15:0] $end
$var reg 16 /" out [15:0] $end
$upscope $end
$scope module Register1 $end
$var wire 1 ) clock $end
$var wire 1 6 enable $end
$var wire 16 0" in [15:0] $end
$var reg 16 1" out [15:0] $end
$upscope $end
$scope module Register2 $end
$var wire 1 ) clock $end
$var wire 1 9 enable $end
$var wire 16 2" in [15:0] $end
$var reg 16 3" out [15:0] $end
$upscope $end
$scope module Register3 $end
$var wire 1 ) clock $end
$var wire 1 < enable $end
$var wire 16 4" in [15:0] $end
$var reg 16 5" out [15:0] $end
$upscope $end
$scope module Register4 $end
$var wire 1 ) clock $end
$var wire 1 ? enable $end
$var wire 16 6" in [15:0] $end
$var reg 16 7" out [15:0] $end
$upscope $end
$scope module Register5 $end
$var wire 1 ) clock $end
$var wire 1 B enable $end
$var wire 16 8" in [15:0] $end
$var reg 16 9" out [15:0] $end
$upscope $end
$scope module Register6 $end
$var wire 1 ) clock $end
$var wire 1 E enable $end
$var wire 16 :" in [15:0] $end
$var reg 16 ;" out [15:0] $end
$upscope $end
$scope module Register7 $end
$var wire 1 ) clock $end
$var wire 1 H enable $end
$var wire 16 <" in [15:0] $end
$var reg 16 =" out [15:0] $end
$upscope $end
$scope module RegisterR $end
$var wire 1 ) clock $end
$var wire 1 J enable $end
$var wire 16 >" in [15:0] $end
$var reg 16 ?" out [15:0] $end
$upscope $end
$scope module RegisterA $end
$var wire 1 ) clock $end
$var wire 1 & enable $end
$var wire 16 @" in [15:0] $end
$var reg 16 A" out [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx A"
bx @"
bx ?"
bx >"
bx ="
bx <"
bx ;"
bx :"
bx 9"
bx 8"
bx 7"
bx 6"
bx 5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
bx /"
bx ."
bx -"
bx ,"
bx +"
b0 *"
bx )"
bx ("
bx '"
bx &"
bx %"
bx $"
bx #"
bx ""
bx !"
b0 ~
b10000000 }
b0 |
b10000000 {
b0 z
b10000000 y
b0 x
b0 w
0v
b0 u
b0 t
0s
xr
xq
0p
xo
0n
xm
0l
xk
0j
xi
0h
xg
0f
xe
0d
xc
0b
b0 a
1`
x_
0^
x]
0\
x[
b10000000 Z
b10000000 Y
b10000000 X
b0 W
b0 V
b0 U
b0 T
b0 S
b0 R
bx Q
b0 P
b0 O
bx N
b0 M
0L
0K
xJ
xI
0H
bx G
xF
0E
bx D
xC
0B
bx A
x@
0?
bx >
x=
0<
bx ;
x:
09
bx 8
x7
06
bx 5
x4
03
bx 2
bx 1
bx 0
1/
x.
x-
b0 ,
b0 +
b0 *
0)
0(
bx '
x&
bx %
0$
b0 #
0"
bx !
$end
#1
1"
1)
#2
bx *"
bx M
bx P
0q
0I
0o
0F
0m
0C
0k
0@
0i
0=
0g
0:
0e
07
1c
14
0]
0-
1[
1&
b1 U
b1 *
b1 V
0"
0)
#3
1"
1)
#4
1r
1J
0[
0&
b10 U
b10 *
b10 V
0"
0)
#5
1"
1)
#6
1s
1K
0r
0J
0_
0.
1b
13
bx w
b11 U
b11 *
b11 V
0"
0)
#7
1"
1)
#8
b101 a
b11 w
0b
03
0s
0K
b11100 T
b11100 ,
b11100 ~
b101000000 O
b101000000 W
b0 U
b0 *
b0 V
b11100 S
0"
0)
b1010000000011100 #
b1010000000011100 +
b1010000000011100 R
#9
1"
1)
#10
b0 Q
b0 '
b0 ,"
b0 ."
b0 0"
b0 2"
b0 4"
b0 6"
b0 8"
b0 :"
b0 <"
b0 @"
b0 *"
b0 M
b0 P
0c
04
1[
1&
b1 U
b1 *
b1 V
0"
0)
#11
b0 -"
b0 0
b0 >"
b0 A"
b0 %
b0 +"
1"
1)
#12
b11100 -"
b11100 0
b11100 >"
b11100 Q
b11100 '
b11100 ,"
b11100 ."
b11100 0"
b11100 2"
b11100 4"
b11100 6"
b11100 8"
b11100 :"
b11100 <"
b11100 @"
b11100 *"
b11100 M
b11100 P
1]
1-
1r
1J
0[
0&
b10 U
b10 *
b10 V
0"
0)
#13
b11100 ?"
b11100 1
b11100 !"
1"
1)
#14
1s
1K
0]
0-
0r
0J
1b
13
bx w
b11 U
b11 *
b11 V
0"
0)
#15
b11100 /"
b11100 2
b11100 ""
1"
1)
#16
b0 -"
b0 0
b0 >"
b0 Q
b0 '
b0 ,"
b0 ."
b0 0"
b0 2"
b0 4"
b0 6"
b0 8"
b0 :"
b0 <"
b0 @"
b1000000 y
b1000000 Y
b1000000 }
b1000000 X
b0 *"
b0 M
b0 P
b1 t
b1 x
b1 |
b11 w
0b
03
0s
0K
b101001000 O
b101001000 W
b1010 T
b1010 ,
b1010 ~
b0 U
b0 *
b0 V
b1010 S
0"
0)
b1010010000001010 #
b1010010000001010 +
b1010010000001010 R
#17
1"
1)
#18
1[
1&
b1 U
b1 *
b1 V
0"
0)
#19
1"
1)
#20
b1010 -"
b1010 0
b1010 >"
b1010 Q
b1010 '
b1010 ,"
b1010 ."
b1010 0"
b1010 2"
b1010 4"
b1010 6"
b1010 8"
b1010 :"
b1010 <"
b1010 @"
b1010 *"
b1010 M
b1010 P
1]
1-
1r
1J
0[
0&
b10 U
b10 *
b10 V
0"
0)
#21
b1010 ?"
b1010 1
b1010 !"
1"
1)
#22
1s
1K
0]
0-
0r
0J
1d
16
bx w
b11 U
b11 *
b11 V
0"
0)
#23
b1010 1"
b1010 5
b1010 #"
1"
1)
#24
b0 -"
b0 0
b0 >"
b0 Q
b0 '
b0 ,"
b0 ."
b0 0"
b0 2"
b0 4"
b0 6"
b0 8"
b0 :"
b0 <"
b0 @"
b1000000 {
b1000000 Z
b10000000 }
b10000000 X
b10000000 y
b10000000 Y
b0 *"
b0 M
b0 P
1^
b1 u
b1 z
b0 t
b0 x
b0 |
b1 a
b0 w
0d
06
0s
0K
b10000000 T
b10000000 ,
b10000000 ~
b1000001 O
b1000001 W
b0 U
b0 *
b0 V
b10000000 S
0"
0)
b10000010000000 #
b10000010000000 +
b10000010000000 R
#25
1"
1)
#26
b11100 -"
b11100 0
b11100 >"
b11100 Q
b11100 '
b11100 ,"
b11100 ."
b11100 0"
b11100 2"
b11100 4"
b11100 6"
b11100 8"
b11100 :"
b11100 <"
b11100 @"
b11100 *"
b11100 M
b11100 P
1c
14
1[
1&
b1 U
b1 *
b1 V
0"
0)
#27
b111000 -"
b111000 0
b111000 >"
b11100 A"
b11100 %
b11100 +"
1"
1)
#28
b10010 -"
b10010 0
b10010 >"
b1111111111110110 Q
b1111111111110110 '
b1111111111110110 ,"
b1111111111110110 ."
b1111111111110110 0"
b1111111111110110 2"
b1111111111110110 4"
b1111111111110110 6"
b1111111111110110 8"
b1111111111110110 :"
b1111111111110110 <"
b1111111111110110 @"
b1010 *"
b1010 M
b1010 P
1_
1.
1e
17
0c
04
1r
1J
0[
0&
b10 U
b10 *
b10 V
0"
0)
#29
b10010 ?"
b10010 1
b10010 !"
1"
1)
#30
b101110 -"
b101110 0
b101110 >"
b10010 *"
b10010 M
b10010 P
b10010 Q
b10010 '
b10010 ,"
b10010 ."
b10010 0"
b10010 2"
b10010 4"
b10010 6"
b10010 8"
b10010 :"
b10010 <"
b10010 @"
1s
1K
0r
0J
0_
0.
1b
13
bx w
b11 U
b11 *
b11 V
0"
0)
#31
b10010 /"
b10010 2
b10010 ""
1"
1)
#32
b100110 -"
b100110 0
b100110 >"
b1010 Q
b1010 '
b1010 ,"
b1010 ."
b1010 0"
b1010 2"
b1010 4"
b1010 6"
b1010 8"
b1010 :"
b1010 <"
b1010 @"
b10000000 {
b10000000 Z
b1010 *"
b1010 M
b1010 P
1v
0^
b0 u
b0 z
b100 a
b1 w
0b
03
0s
0K
b10010 N
b10010 !
b100000000 O
b100000000 W
b0 T
b0 ,
b0 ~
b0 U
b0 *
b0 V
b0 S
0"
0)
b1000000000000000 #
b1000000000000000 +
b1000000000000000 R
#33
1"
1)
#34
b11100 -"
b11100 0
b11100 >"
b0 Q
b0 '
b0 ,"
b0 ."
b0 0"
b0 2"
b0 4"
b0 6"
b0 8"
b0 :"
b0 <"
b0 @"
b0 *"
b0 M
b0 P
0e
07
1[
1&
b1 U
b1 *
b1 V
0"
0)
#35
b0 -"
b0 0
b0 >"
b0 A"
b0 %
b0 +"
1"
1)
#36
b10010 -"
b10010 0
b10010 >"
b10010 Q
b10010 '
b10010 ,"
b10010 ."
b10010 0"
b10010 2"
b10010 4"
b10010 6"
b10010 8"
b10010 :"
b10010 <"
b10010 @"
b10010 *"
b10010 M
b10010 P
1c
14
1r
1J
0[
0&
b10 U
b10 *
b10 V
0"
0)
#37
1"
1)
#38
1s
1K
0r
0J
1b
13
bx w
b11 U
b11 *
b11 V
0"
0)
#39
1"
1)
#40
b1 w
0b
03
0s
0K
b0 U
b0 *
b0 V
0"
0)
