$date
	Mon Jul  4 01:30:38 2016
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 16 ! bus [15:0] $end
$var reg 1 " clock $end
$var reg 16 # iin [15:0] $end
$var reg 1 $ resetn $end
$scope module p $end
$var wire 1 % OperationSelect $end
$var wire 16 & a [15:0] $end
$var wire 1 ' a_enable $end
$var wire 16 ( bus [15:0] $end
$var wire 1 ) clear $end
$var wire 1 * clock $end
$var wire 2 + cont [1:0] $end
$var wire 16 , iin [15:0] $end
$var wire 16 - imediate [15:0] $end
$var wire 1 . imediate_select $end
$var wire 1 / immediate_select $end
$var wire 1 0 negativo $end
$var wire 16 1 out [15:0] $end
$var wire 16 2 r [15:0] $end
$var wire 16 3 r0 [15:0] $end
$var wire 1 4 r0_enable $end
$var wire 1 5 r0_select $end
$var wire 16 6 r1 [15:0] $end
$var wire 1 7 r1_enable $end
$var wire 1 8 r1_select $end
$var wire 16 9 r2 [15:0] $end
$var wire 1 : r2_enable $end
$var wire 1 ; r2_select $end
$var wire 16 < r3 [15:0] $end
$var wire 1 = r3_enable $end
$var wire 1 > r3_select $end
$var wire 16 ? r4 [15:0] $end
$var wire 1 @ r4_enable $end
$var wire 1 A r4_select $end
$var wire 16 B r5 [15:0] $end
$var wire 1 C r5_enable $end
$var wire 1 D r5_select $end
$var wire 16 E r6 [15:0] $end
$var wire 1 F r6_enable $end
$var wire 1 G r6_select $end
$var wire 16 H r7 [15:0] $end
$var wire 1 I r7_enable $end
$var wire 1 J r7_select $end
$var wire 1 K r_enable $end
$var wire 1 L r_select $end
$var wire 1 M resetn $end
$var wire 16 N saida [15:0] $end
$var reg 9 O in [8:0] $end
$var reg 16 P outputProcessor [15:0] $end
$scope module comp $end
$var wire 1 0 enable $end
$var wire 16 Q iin [15:0] $end
$var reg 16 R out [15:0] $end
$upscope $end
$scope module ext $end
$var wire 16 S iin [15:0] $end
$var reg 10 T imediate [9:0] $end
$var reg 16 U out [15:0] $end
$upscope $end
$scope module count $end
$var wire 1 M clear $end
$var wire 1 * clock $end
$var reg 2 V out [1:0] $end
$upscope $end
$scope module ctrl $end
$var wire 2 W count [1:0] $end
$var wire 9 X in [8:0] $end
$var wire 8 Y outEnableRegister [7:0] $end
$var wire 8 Z outRegistera [7:0] $end
$var wire 8 [ outRegisterb [7:0] $end
$var wire 1 M resetn $end
$var reg 1 \ a_enable $end
$var reg 1 ] clear $end
$var reg 1 ^ immediate_select $end
$var reg 1 _ negar $end
$var reg 1 ` negativo $end
$var reg 1 a opSelect $end
$var reg 3 b operation [2:0] $end
$var reg 1 c r0_enable $end
$var reg 1 d r0_select $end
$var reg 1 e r1_enable $end
$var reg 1 f r1_select $end
$var reg 1 g r2_enable $end
$var reg 1 h r2_select $end
$var reg 1 i r3_enable $end
$var reg 1 j r3_select $end
$var reg 1 k r4_enable $end
$var reg 1 l r4_select $end
$var reg 1 m r5_enable $end
$var reg 1 n r5_select $end
$var reg 1 o r6_enable $end
$var reg 1 p r6_select $end
$var reg 1 q r7_enable $end
$var reg 1 r r7_select $end
$var reg 1 s r_enable $end
$var reg 1 t r_select $end
$var reg 3 u registera [2:0] $end
$var reg 3 v registerb [2:0] $end
$var reg 1 w saida $end
$var reg 2 x status [1:0] $end
$scope module dec_1 $end
$var wire 3 y register [2:0] $end
$var reg 8 z out [7:0] $end
$upscope $end
$scope module dec_2 $end
$var wire 3 { register [2:0] $end
$var reg 8 | out [7:0] $end
$upscope $end
$scope module dec_3 $end
$var wire 3 } register [2:0] $end
$var reg 8 ~ out [7:0] $end
$upscope $end
$upscope $end
$scope module mux $end
$var wire 16 !" imediate [15:0] $end
$var wire 1 . imediate_select $end
$var wire 16 "" r [15:0] $end
$var wire 16 #" r0 [15:0] $end
$var wire 1 5 r0_select $end
$var wire 16 $" r1 [15:0] $end
$var wire 1 8 r1_select $end
$var wire 16 %" r2 [15:0] $end
$var wire 1 ; r2_select $end
$var wire 16 &" r3 [15:0] $end
$var wire 1 > r3_select $end
$var wire 16 '" r4 [15:0] $end
$var wire 1 A r4_select $end
$var wire 16 (" r5 [15:0] $end
$var wire 1 D r5_select $end
$var wire 16 )" r6 [15:0] $end
$var wire 1 G r6_select $end
$var wire 16 *" r7 [15:0] $end
$var wire 1 J r7_select $end
$var wire 1 L r_select $end
$var reg 16 +" bus [15:0] $end
$upscope $end
$scope module alu $end
$var wire 1 % OpSelect $end
$var wire 16 ," a [15:0] $end
$var wire 16 -" b [15:0] $end
$var reg 16 ." result [15:0] $end
$upscope $end
$scope module R0 $end
$var wire 1 * clock $end
$var wire 1 4 enable $end
$var wire 16 /" in [15:0] $end
$var reg 16 0" out [15:0] $end
$upscope $end
$scope module R1 $end
$var wire 1 * clock $end
$var wire 1 7 enable $end
$var wire 16 1" in [15:0] $end
$var reg 16 2" out [15:0] $end
$upscope $end
$scope module R2 $end
$var wire 1 * clock $end
$var wire 1 : enable $end
$var wire 16 3" in [15:0] $end
$var reg 16 4" out [15:0] $end
$upscope $end
$scope module R3 $end
$var wire 1 * clock $end
$var wire 1 = enable $end
$var wire 16 5" in [15:0] $end
$var reg 16 6" out [15:0] $end
$upscope $end
$scope module R4 $end
$var wire 1 * clock $end
$var wire 1 @ enable $end
$var wire 16 7" in [15:0] $end
$var reg 16 8" out [15:0] $end
$upscope $end
$scope module R5 $end
$var wire 1 * clock $end
$var wire 1 C enable $end
$var wire 16 9" in [15:0] $end
$var reg 16 :" out [15:0] $end
$upscope $end
$scope module R6 $end
$var wire 1 * clock $end
$var wire 1 F enable $end
$var wire 16 ;" in [15:0] $end
$var reg 16 <" out [15:0] $end
$upscope $end
$scope module R7 $end
$var wire 1 * clock $end
$var wire 1 I enable $end
$var wire 16 =" in [15:0] $end
$var reg 16 >" out [15:0] $end
$upscope $end
$scope module Rr $end
$var wire 1 * clock $end
$var wire 1 K enable $end
$var wire 16 ?" in [15:0] $end
$var reg 16 @" out [15:0] $end
$upscope $end
$scope module Ra $end
$var wire 1 * clock $end
$var wire 1 ' enable $end
$var wire 16 A" in [15:0] $end
$var reg 16 B" out [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx B"
b0 A"
bx @"
b0 ?"
bx >"
b0 ="
bx <"
b0 ;"
bx :"
b0 9"
bx 8"
b0 7"
bx 6"
b0 5"
bx 4"
b0 3"
bx 2"
b0 1"
bx 0"
b0 /"
bx ."
b0 -"
bx ,"
b0 +"
bx *"
bx )"
bx ("
bx '"
bx &"
bx %"
bx $"
bx #"
bx ""
b0 !"
b10000000 ~
b0 }
b10000000 |
b0 {
b10000000 z
b0 y
b0 x
0w
b0 v
b0 u
0t
xs
xr
0q
xp
0o
xn
0m
xl
0k
xj
0i
xh
0g
xf
0e
xd
0c
b0 b
1a
x`
0_
x^
0]
x\
b10000000 [
b10000000 Z
b10000000 Y
b0 X
b0 W
b0 V
b0 U
b0 T
b0 S
b0 R
b0 Q
b0 P
b0 O
b0 N
0M
0L
xK
xJ
0I
bx H
xG
0F
bx E
xD
0C
bx B
xA
0@
bx ?
x>
0=
bx <
x;
0:
bx 9
x8
07
bx 6
x5
04
bx 3
bx 2
bx 1
x0
x/
z.
b0 -
b0 ,
b0 +
0*
0)
b0 (
x'
bx &
1%
0$
b0 #
0"
b0 !
$end
#1
bx P
bx !
bx R
bx (
bx -"
bx /"
bx 1"
bx 3"
bx 5"
bx 7"
bx 9"
bx ;"
bx ="
bx ?"
bx A"
bx +"
bx N
bx Q
0r
0J
0p
0G
0n
0D
0l
0A
0j
0>
0h
0;
0f
08
1d
15
0^
0/
1\
1'
b1 V
b1 +
b1 W
1"
1*
#2
0"
0*
#3
1s
1K
0\
0'
b10 V
b10 +
b10 W
1"
1*
#4
0"
0*
#5
1t
1L
0s
0K
0`
00
1c
14
bx x
b11 V
b11 +
b11 W
1"
1*
#6
0"
0*
#7
b0 x
0c
04
0t
0L
b0 V
b0 +
b0 W
1"
1*
#8
b11 x
b101 b
b11100 U
b11100 -
b11100 !"
b101000000 O
b101000000 X
b11100 T
0"
0*
b1010000000011100 #
b1010000000011100 ,
b1010000000011100 S
#9
b0 P
b0 !
b0 R
b0 (
b0 -"
b0 /"
b0 1"
b0 3"
b0 5"
b0 7"
b0 9"
b0 ;"
b0 ="
b0 ?"
b0 A"
b0 +"
b0 N
b0 Q
0d
05
1\
1'
b1 V
b1 +
b1 W
1"
1*
#10
0"
0*
#11
b0 ."
b0 1
1^
1/
1s
1K
0\
0'
b0 B"
b0 &
b0 ,"
b10 V
b10 +
b10 W
1"
1*
#12
0"
0*
#13
1t
1L
0^
0/
0s
0K
b0 @"
b0 2
b0 ""
1c
14
bx x
b11 V
b11 +
b11 W
1"
1*
#14
0"
0*
#15
b11 x
0c
04
0t
0L
b0 0"
b0 3
b0 #"
b0 V
b0 +
b0 W
1"
1*
#16
b1000000 z
b1000000 Z
b1000000 ~
b1000000 Y
b1 u
b1 y
b1 }
b101001000 O
b101001000 X
b1010 U
b1010 -
b1010 !"
b1010 T
0"
0*
b1010010000001010 #
b1010010000001010 ,
b1010010000001010 S
#17
1\
1'
b1 V
b1 +
b1 W
1"
1*
#18
0"
0*
#19
1^
1/
1s
1K
0\
0'
b10 V
b10 +
b10 W
1"
1*
#20
0"
0*
#21
1t
1L
0^
0/
0s
0K
1e
17
bx x
b11 V
b11 +
b11 W
1"
1*
#22
0"
0*
#23
b11 x
0e
07
0t
0L
b0 2"
b0 6
b0 $"
b0 V
b0 +
b0 W
1"
1*
#24
b1000000 |
b1000000 [
b10000000 ~
b10000000 Y
b10000000 z
b10000000 Z
1_
b0 x
b1 v
b1 {
b0 u
b0 y
b0 }
b1 b
b10000000 U
b10000000 -
b10000000 !"
b1000001 O
b1000001 X
b10000000 T
0"
0*
b10000010000000 #
b10000010000000 ,
b10000010000000 S
#25
1d
15
1\
1'
b1 V
b1 +
b1 W
1"
1*
#26
0"
0*
#27
1`
10
1f
18
0d
05
1s
1K
0\
0'
b10 V
b10 +
b10 W
1"
1*
#28
0"
0*
#29
1t
1L
0s
0K
0`
00
1c
14
bx x
b11 V
b11 +
b11 W
1"
1*
#30
0"
0*
#31
b0 x
0c
04
0t
0L
b0 V
b0 +
b0 W
1"
1*
#32
b10000000 |
b10000000 [
1w
0_
b1 x
b0 v
b0 {
b100 b
b100000000 O
b100000000 X
b0 U
b0 -
b0 !"
b0 T
0"
0*
b1000000000000000 #
b1000000000000000 ,
b1000000000000000 S
#33
0f
08
1\
1'
b1 V
b1 +
b1 W
1"
1*
#34
0"
0*
#35
1d
15
1s
1K
0\
0'
b10 V
b10 +
b10 W
1"
1*
#36
0"
0*
#37
1t
1L
0s
0K
1c
14
bx x
b11 V
b11 +
b11 W
1"
1*
#38
0"
0*
#39
b1 x
0c
04
0t
0L
b0 V
b0 +
b0 W
1"
1*
#40
0"
0*
